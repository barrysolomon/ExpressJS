<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Testing UI</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .request-history {
            max-height: 400px;
            overflow-y: auto;
        }
        .response-container {
            max-height: 300px;
            overflow-y: auto;
        }
        .version-info {
            font-size: 0.8rem;
            color: #6c757d;
        }
    </style>
</head>
<body>

   

    <div class="container mt-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>API Testing UI</h1>
            <div class="version-info text-end">
                <div>Node.js <%= nodeVersion %></div>
                <div>Express <%= expressVersion %></div>
                <div>MongoDB <%= mongodbVersion %></div>
            </div>
        </div>
        
        <!-- API Request Form -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Make API Request</h5>
            </div>
            <div class="card-body">
                <form id="apiRequestForm">
                    <div class="mb-3">
                        <label for="url" class="form-label">URL</label>
                        <input type="url" class="form-control" id="url" name="url" 
                               value="https://jsonplaceholder.typicode.com/posts" required>
                    </div>
                    <div class="mb-3">
                        <label for="method" class="form-label">Method</label>
                        <select class="form-select" id="method" name="method">
                            <option value="GET">GET</option>
                            <option value="POST">POST</option>
                            <option value="PUT">PUT</option>
                            <option value="DELETE">DELETE</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="headers" class="form-label">Headers (JSON)</label>
                        <textarea class="form-control" id="headers" name="headers" rows="3">{"Content-Type": "application/json"}</textarea>
                    </div>
                    <div class="mb-3">
                        <label for="body" class="form-label">Body (JSON)</label>
                        <textarea class="form-control" id="body" name="body" rows="5">{"title": "Test Post", "body": "This is a test post", "userId": 1}</textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Send Request</button>
                </form>
            </div>
        </div>

        <!-- Response Section -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Response</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label">Status Code</label>
                    <div id="statusCode" class="form-control-plaintext"></div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Response Headers</label>
                    <pre id="responseHeaders" class="response-container form-control"></pre>
                </div>
                <div class="mb-3">
                    <label class="form-label">Response Body</label>
                    <pre id="responseBody" class="response-container form-control"></pre>
                </div>
            </div>
        </div>

        <!-- Request History -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Request History</h5>
                <button class="btn btn-sm btn-outline-danger" onclick="clearHistory()">Clear History</button>
            </div>
            <div class="card-body">
                <div id="requestHistory" class="request-history">
                    <!-- History items will be added here -->
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script type="module" src="index.js"></script>
    <script type="module" src="/bundle/instrumentation.bundle.js"></script>
    <script>
        document.getElementById('apiRequestForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = {
                url: document.getElementById('url').value,
                method: document.getElementById('method').value,
                headers: JSON.parse(document.getElementById('headers').value),
                body: document.getElementById('body').value
            };

            try {
                const response = await fetch('/api/request', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                const data = await response.json();
                
                // Update response display
                document.getElementById('statusCode').textContent = data.status_code;
                document.getElementById('responseHeaders').textContent = JSON.stringify(data.headers, null, 2);
                document.getElementById('responseBody').textContent = JSON.stringify(data.body, null, 2);

                // Refresh history
                await loadRequestHistory();
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while making the request');
            }
        });

        async function loadRequestHistory() {
            try {
                const response = await fetch('/api/history');
                const history = await response.json();
                
                const historyContainer = document.getElementById('requestHistory');
                historyContainer.innerHTML = history.map(item => `
                    <div class="card mb-2">
                        <div class="card-body">
                            <h6 class="card-title">${item.method} ${item.url}</h6>
                            <p class="card-text">
                                <small class="text-muted">${new Date(item.timestamp).toLocaleString()}</small>
                            </p>
                            <button class="btn btn-sm btn-outline-primary" onclick="viewRequestDetails('${item._id}')">
                                View Details
                            </button>
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading history:', error);
            }
        }

        async function viewRequestDetails(requestId) {
            try {
                const response = await fetch(`/api/request/${requestId}`);
                const details = await response.json();
                
                // Update form with request details
                document.getElementById('url').value = details.url;
                document.getElementById('method').value = details.method;
                document.getElementById('headers').value = JSON.stringify(details.headers, null, 2);
                document.getElementById('body').value = JSON.stringify(details.body, null, 2);
                
                // Update response display
                document.getElementById('statusCode').textContent = details.response.status_code;
                document.getElementById('responseHeaders').textContent = JSON.stringify(details.response.headers, null, 2);
                document.getElementById('responseBody').textContent = JSON.stringify(details.response.body, null, 2);
            } catch (error) {
                console.error('Error loading request details:', error);
            }
        }

        async function clearHistory() {
            try {
                const response = await fetch('/api/history', {
                    method: 'DELETE'
                });
                if (response.ok) {
                    await loadRequestHistory();
                }
            } catch (error) {
                console.error('Error clearing history:', error);
            }
        }

        // Load initial history
        loadRequestHistory();
    </script>
</body>
</html> 